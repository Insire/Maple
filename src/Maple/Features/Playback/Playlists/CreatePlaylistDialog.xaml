<local:DialogWindow x:Class="Maple.CreatePlaylistDialog"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
                    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:local="clr-namespace:Maple"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:mvvm="http://SoftThorn.MvvmScarletToolkit.com/winfx/xaml/shared"
                    x:Name="CreatePlaylistDialogRoot"
                    Title="Edit Playlist"
                    Width="800"
                    Height="425"
                    d:DataContext="{d:DesignInstance Type=local:CreatePlaylistViewModel,
                                                     IsDesignTimeCreatable=false}"
                    WindowStartupLocation="CenterOwner"
                    mc:Ignorable="d">

    <DockPanel Margin="8">
        <DockPanel DockPanel.Dock="Bottom">

            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">

                <Button Margin="0,0,8,0"
                        Command="{Binding AcceptCommand, ElementName=CreatePlaylistDialogRoot}"
                        IsDefault="True">
                    <icons:PackIconMaterial Margin="8,4" Kind="Check" />
                </Button>

                <Button IsCancel="True">
                    <icons:PackIconMaterial Margin="8,4" Kind="Cancel" />
                </Button>
            </StackPanel>

            <TextBlock Foreground="{DynamicResource {x:Static adonisUi:Brushes.AlertBrush}}" Text="{Binding Error, TargetNullValue=''}" />
        </DockPanel>

        <Grid DataContext="{Binding Playlist}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="8" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="8" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="8" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="8" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="8" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="8" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="8" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="8" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Button Grid.Row="0"
                    Grid.RowSpan="10"
                    Grid.Column="0"
                    Width="200"
                    Height="200"
                    VerticalAlignment="Top"
                    Command="{Binding SelectThumbnailCommand, ElementName=CreatePlaylistDialogRoot}"
                    ToolTip="{Binding Thumbnail}">
                <Grid>
                    <Image Source="{Binding Thumbnail, Converter={local:ImageFilePathFallback}}" />
                    <icons:PackIconMaterial HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Kind="Plus"
                                            Visibility="{Binding Thumbnail, Converter={local:StringLengthToVisibility Visibility=Collapsed}}" />
                </Grid>
            </Button>

            <ItemsControl Grid.Row="11"
                          Grid.Column="0"
                          Width="200">
                <ItemsControl.ItemContainerStyle>
                    <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
                        <Setter Property="Margin" Value="4" />
                    </Style>
                </ItemsControl.ItemContainerStyle>

                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <Button Content="A tag" />
                <Button Content="A longer tag" />
                <Button Content="Surprisingly long and fancy tag" />
                <Button Content="Pretty long ag" />
                <Button>
                    <icons:PackIconMaterial Kind="Plus" />
                </Button>
            </ItemsControl>

            <TextBlock Grid.Row="0"
                       Grid.Column="2"
                       Text="Name" />
            <TextBox Grid.Row="0"
                     Grid.Column="4"
                     adonisExtensions:WatermarkExtension.Watermark="Name"
                     Text="{Binding Name, FallbackValue='New', UpdateSourceTrigger=PropertyChanged, Delay=250}" />

            <Separator Grid.Row="1"
                       Grid.Column="2"
                       Grid.ColumnSpan="3" />

            <TextBlock Grid.Row="2"
                       Grid.Column="2"
                       Text="CreatedBy" />
            <TextBlock Grid.Row="2"
                       Grid.Column="4"
                       Text="{Binding CreatedBy, TargetNullValue='unavailable'}" />

            <TextBlock Grid.Row="4"
                       Grid.Column="2"
                       Text="CreatedOn" />
            <TextBlock Grid.Row="4"
                       Grid.Column="4"
                       Text="{Binding CreatedOn, TargetNullValue='unavailable'}" />

            <Separator Grid.Row="5"
                       Grid.Column="2"
                       Grid.ColumnSpan="3" />

            <TextBlock Grid.Row="6"
                       Grid.Column="2"
                       Text="UpdatedBy" />
            <TextBlock Grid.Row="6"
                       Grid.Column="4"
                       Text="{Binding UpdatedBy, TargetNullValue='unavailable'}" />

            <TextBlock Grid.Row="8"
                       Grid.Column="2"
                       Text="UpdatedOn" />
            <TextBlock Grid.Row="8"
                       Grid.Column="4"
                       Text="{Binding UpdatedOn, TargetNullValue='unavailable'}" />

            <Separator Grid.Row="9"
                       Grid.Column="2"
                       Grid.ColumnSpan="3" />

            <ItemsControl Grid.Row="10"
                          Grid.Column="2"
                          Grid.ColumnSpan="3">
                <ItemsControl.ItemContainerStyle>
                    <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
                        <Setter Property="Margin" Value="4" />
                    </Style>
                </ItemsControl.ItemContainerStyle>

                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <Button>
                    <StackPanel Orientation="Horizontal">
                        <icons:PackIconMaterial Margin="0,0,8,0" Kind="FileSearchOutline" />
                        <TextBlock Text="Import items from file" />
                    </StackPanel>
                </Button>

                <Button>
                    <StackPanel Orientation="Horizontal">
                        <icons:PackIconMaterial Margin="0,0,8,0" Kind="FolderSearchOutline" />
                        <TextBlock Text="Import items from folder" />
                    </StackPanel>
                </Button>

                <Button>
                    <StackPanel Orientation="Horizontal">
                        <icons:PackIconMaterial Margin="0,0,8,0" Kind="PlaylistPlus" />
                        <TextBlock Text="Import items from playlist" />
                    </StackPanel>
                </Button>

                <Button>
                    <StackPanel Orientation="Horizontal">
                        <icons:PackIconMaterial Margin="0,0,8,0" Kind="Youtube" />
                        <TextBlock Text="Import items from youtube" />
                    </StackPanel>
                </Button>

                <Button Command="{Binding MonstercatImportCommand, ElementName=CreatePlaylistDialogRoot}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Import from monstercat" />
                    </StackPanel>
                </Button>

                <Button>
                    <StackPanel Orientation="Horizontal">
                        <icons:PackIconMaterial Margin="0,0,8,0" Kind="PlaylistEdit" />
                        <TextBlock Text="Edit items" />
                    </StackPanel>
                </Button>
            </ItemsControl>
        </Grid>
    </DockPanel>
</local:DialogWindow>
