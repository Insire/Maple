<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Playback" xml:space="preserve">
    <value>Playback</value>
  </data>
  <data name="Playlists" xml:space="preserve">
    <value>Playlists</value>
  </data>
  <data name="VideoAdd" xml:space="preserve">
    <value>Add video</value>
  </data>
  <data name="PlaylistAdd" xml:space="preserve">
    <value>Add playlist</value>
  </data>
  <data name="Themes" xml:space="preserve">
    <value>Color  Themes</value>
  </data>
  <data name="NavigationLoad" xml:space="preserve">
    <value>Loading navigation</value>
  </data>
  <data name="NavigationLoaded" xml:space="preserve">
    <value>Loaded navigation</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="ShellTitle" xml:space="preserve">
    <value>Maple</value>
  </data>
  <data name="Languages" xml:space="preserve">
    <value>Languages</value>
  </data>
  <data name="IsRequired" xml:space="preserve">
    <value>can not be empty</value>
  </data>
  <data name="Playlist" xml:space="preserve">
    <value>Playlist</value>
  </data>
  <data name="AudioDevice" xml:space="preserve">
    <value>Playback device</value>
  </data>
  <data name="PlaybackMode" xml:space="preserve">
    <value>Playback mode</value>
  </data>
  <data name="PlaybackShuffle" xml:space="preserve">
    <value>Shuffle Playback</value>
  </data>
  <data name="Director" xml:space="preserve">
    <value>Director</value>
  </data>
  <data name="MainMediaplayer" xml:space="preserve">
    <value>Default media player</value>
  </data>
  <data name="InvalidMediaplayerCountOnDBException" xml:space="preserve">
    <value>There is an invalid amount of entries for the default media player on the database</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="MaxPlaylistCountReachedException" xml:space="preserve">
    <value>Creating a new playlist failed, because the maximum amount was reached</value>
  </data>
  <data name="SavingState" xml:space="preserve">
    <value>Saving changes</value>
  </data>
  <data name="SavedState" xml:space="preserve">
    <value>Saved changes</value>
  </data>
  <data name="DisposingState" xml:space="preserve">
    <value>Disposing cache</value>
  </data>
  <data name="DisposedState" xml:space="preserve">
    <value>Disposed cache</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="YoutubePlaylistImport" xml:space="preserve">
    <value>Import a playlist from Youtube</value>
  </data>
  <data name="FolderPlaylistImport" xml:space="preserve">
    <value>Generate and import a playlist from a filesystem folder</value>
  </data>
  <data name="FilePlaylistImport" xml:space="preserve">
    <value>Import a playlist from a file</value>
  </data>
  <data name="Accept" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Duration" xml:space="preserve">
    <value>Duration</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>Previous</value>
  </data>
  <data name="Volume" xml:space="preserve">
    <value>Volume</value>
  </data>
  <data name="PlaybackModeNone" xml:space="preserve">
    <value>Repeat no track</value>
  </data>
  <data name="PlaybackModeOne" xml:space="preserve">
    <value>Reapeat one track</value>
  </data>
  <data name="PlaybackModeAll" xml:space="preserve">
    <value>Repeat all tracks</value>
  </data>
  <data name="Restriction" xml:space="preserve">
    <value>Restriction</value>
  </data>
  <data name="Parse" xml:space="preserve">
    <value>Parse</value>
  </data>
  <data name="ResctrictionNone" xml:space="preserve">
    <value>No resctriction</value>
  </data>
  <data name="RestrictionRestricted" xml:space="preserve">
    <value>No Access</value>
  </data>
  <data name="Count" xml:space="preserve">
    <value>Count</value>
  </data>
  <data name="DialogOpenAlready" xml:space="preserve">
    <value>There is already a dialog open. There can only be one</value>
  </data>
  <data name="YoutubeLoad" xml:space="preserve">
    <value>Loading youtube service</value>
  </data>
  <data name="YoutubeLoaded" xml:space="preserve">
    <value>Loaded youtube service</value>
  </data>
  <data name="PlaylistCurrent" xml:space="preserve">
    <value>Current playlist</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading</value>
  </data>
  <data name="Saving" xml:space="preserve">
    <value>Saving</value>
  </data>
  <data name="SelectFolder" xml:space="preserve">
    <value>Folder selection</value>
  </data>
  <data name="SelectFiles" xml:space="preserve">
    <value>File selection</value>
  </data>
  <data name="AppStart" xml:space="preserve">
    <value>Application is being started</value>
  </data>
  <data name="GithubPageCommand" xml:space="preserve">
    <value>Open project page at GitHub.com</value>
  </data>
  <data name="MediaPlayerCommand" xml:space="preserve">
    <value>Switch to playlist</value>
  </data>
  <data name="ColorOptionsCommand" xml:space="preserve">
    <value>Switch to color profiles</value>
  </data>
  <data name="OptionsCommand" xml:space="preserve">
    <value>Switch to options</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditLanguage" xml:space="preserve">
    <value>Change language</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="MediaPlayers" xml:space="preserve">
    <value>media players</value>
  </data>
  <data name="MediaItem" xml:space="preserve">
    <value>Media item</value>
  </data>
  <data name="MediaItems" xml:space="preserve">
    <value>Media items</value>
  </data>
  <data name="ExceptionMessageFalseCondition" xml:space="preserve">
    <value>The given condition is false.</value>
  </data>
  <data name="ExceptionMessageTrueCondition" xml:space="preserve">
    <value>The given condition is true.</value>
  </data>
  <data name="ExceptionMessageEqualValues" xml:space="preserve">
    <value>Values must be equal.</value>
  </data>
  <data name="ExceptionMessageNotEqualValues" xml:space="preserve">
    <value>Values must not be equal.</value>
  </data>
  <data name="ExceptionMessageCollectionNullOrEmpty" xml:space="preserve">
    <value>Collection must not be null or empty.</value>
  </data>
  <data name="ExceptionMessageMissingDirectory" xml:space="preserve">
    <value>Cannot find:</value>
  </data>
  <data name="ExceptionMessageMissingFile" xml:space="preserve">
    <value>Cannot find:</value>
  </data>
  <data name="ExceptionMessageStringNullEmpyOrWhiteSpace" xml:space="preserve">
    <value>String mus not be null, empty or whitespace.</value>
  </data>
  <data name="ExceptionMessageUnhandled" xml:space="preserve">
    <value>An unexpected error occured.</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="OpenMediaPlayerConfigurationCommand" xml:space="preserve">
    <value>Open Mediaplayer settings</value>
  </data>
</root>